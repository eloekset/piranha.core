# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '$(Build.SourcesDirectory)\Piranha.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseGitVersion@5
  displayName: 'UseGitVersion (preview)'
  inputs:
    versionSpec: '5.1.3'
    includePrerelease: true
    updateAssemblyInfo: false
  env:
      BUILD_BUILDNUMBER: $(GitVersion.NuGetVersionV2)

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(solution)'

- task: NuGetCommand@2
  displayName: 'Install opencover'
  inputs:
    command: 'custom'
    arguments: 'install -Verbosity quiet opencover -Version 4.6.519 -OutputDirectory tools'

- task: NuGetCommand@2
  displayName: 'Install coveralls.net'
  inputs:
    command: 'custom'
    arguments: 'install -Verbosity quiet coveralls.net -Version 0.7.0 -OutputDirectory tools'

- task: VSBuild@1
  displayName: 'Build'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:Version="$(build.buildNumber)" /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# skip tests because they are very time consuming
#- task: DotNetCoreCLI@2
#  displayName: 'Test'
#  inputs:
#    command: 'test'
#    projects: '$(solution)'
#    arguments: '/p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:ExcludeByAttribute="NoCoverage"'

# Skip CoverAlls
#- task: PowerShell@2
#  displayName: 'Test coverage'
#  inputs:
#    targetType: 'inline'
#    script: |
#      .\tools\coveralls.net.0.7.0\tools\csmacnz.coveralls.exe --opencover -i .\test\Piranha.Tests\coverage.opencover.xml --repoToken $env:COVERALLS_REPO_TOKEN --useRelativePaths --commitId $(Build.SourceVersion) --commitBranch $(Build.SourceBranch) --commitAuthor $(Build.RequestedFor) --commitEmail $(Build.RequestedForEmail) --commitMessage $(Build.Reason) --jobId $(Build.BuildNumber) --serviceName AzurePipelines

- task: CmdLine@2
  displayName: 'Generate NuGet packages'
  inputs:
    script: 'dotnet pack $(solution) --output $(Build.ArtifactStagingDirectory) --include-symbols -p:Configuration=$(buildConfiguration) -p:Version=$(build.buildNumber) --verbosity Information'

#- task: DotNetCoreCLI@2
#  displayName: 'Generate NuGet packages'
#  inputs:
#    command: 'pack'
#    packagesToPack: '**/Piranha*.csproj;!**/*Tests.csproj'
#    nobuild: true
#    includesymbols: true
#    versioningScheme: 'byBuildNumber'

- task: PublishBuildArtifacts@1
  displayName: 'Publish build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'